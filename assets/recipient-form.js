!function(){"use strict";customElements.get("recipient-form")||customElements.define("recipient-form",class extends HTMLElement{constructor(){super(),this.recipientCheckbox=this.querySelector("[data-recipient-checkbox]"),this.recipientControl=this.querySelector("[data-recipient-control]"),this.recipientControl.disabled=!0,this.recipientEmail=this.querySelector("[data-recipient-email]"),this.recipientName=this.querySelector("[data-recipient-name]"),this.recipientMessage=this.querySelector("[data-recipient-message]"),this.recipientSendOn=this.querySelector("[data-recipient-send-on]"),this.recipientOffset=this.querySelector("[data-recipient-offset]"),this.recipientOffset&&(this.recipientOffset.value=(new Date).getTimezoneOffset()),this.cartDrawer=document.querySelector("[data-cart-drawer]"),this.onChangeEvent=e=>this.onChange(e),this.onCartAddedEvent=()=>this.onCartAdded()}connectedCallback(){this.recipientCheckbox&&(this.disableInputFields(),this.recipientCheckbox.addEventListener("change",this.onChangeEvent),document.addEventListener("theme:cart:added",this.onCartAddedEvent))}onChange(e){if(!e.target.checked)return this.clearInputFields(),void this.disableInputFields();this.enableInputFields()}onCartAdded(){const e=this.closest("[data-product-form]").offsetTop,t=document.body.classList.contains("js-quick-view-visible");if(!(!0===this.recipientCheckbox.checked))return;t||window.scrollTo({top:e,left:0,behavior:"smooth"});const i=e=>{e.target===this.cartDrawer&&(requestAnimationFrame((()=>{this.recipientCheckbox.checked=!1,this.recipientCheckbox.dispatchEvent(new Event("change"))})),this.cartDrawer.removeEventListener("transitionend",i))};this.cartDrawer.addEventListener("transitionend",i)}inputFields(){return[this.recipientEmail,this.recipientName,this.recipientMessage,this.recipientSendOn]}disableableFields(){return[...this.inputFields(),this.recipientOffset]}clearInputFields(){this.inputFields().forEach((e=>e.value=""))}enableInputFields(){this.disableableFields().forEach((e=>e.disabled=!1))}disableInputFields(){this.disableableFields().forEach((e=>e.disabled=!0))}disconnectedCallback(){this.recipientCheckbox.removeEventListener("change",this.onChangeEvent),document.removeEventListener("theme:cart:added",this.onCartAddedEvent)}})}();
