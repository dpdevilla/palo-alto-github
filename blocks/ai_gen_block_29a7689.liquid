{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-product-card-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .ai-product-variants-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-top: auto;
  }

  .ai-variant-dropdown-{{ ai_gen_id }} {
    flex: 1;
    height: 36px;
    border: 1px solid #ccc;
    border-radius: 6px;
    background-color: #fff;
    font-size: 13px;
    color: #333;
    padding: 0 8px;
    cursor: pointer;
  }

  .ai-add-to-cart-button-{{ ai_gen_id }} {
    flex: 1;
    height: 36px;
    border-radius: 6px;
    background-color: #000;
    color: #fff;
    font-size: 13px;
    font-weight: 600;
    border: none;
    cursor: pointer;
    transition: 0.3s ease;
  }

  .ai-add-to-cart-button-{{ ai_gen_id }}:hover {
    background-color: #333;
    transform: translateY(-1px);
  }

  .ai-product-image-wrapper-{{ ai_gen_id }} {
    position: relative;
    overflow: hidden;
  }

  .ai-product-image-primary-{{ ai_gen_id }},
  .ai-product-image-secondary-{{ ai_gen_id }} {
    width: 100%;
    height: auto;
    transition: opacity 0.4s ease, transform 0.3s ease;
    display: block;
  }

  .ai-product-image-secondary-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
  }

  .ai-product-image-wrapper-{{ ai_gen_id }}:hover .ai-product-image-primary-{{ ai_gen_id }} {
    opacity: 0;
    transform: scale(1.05);
  }

  .ai-product-image-wrapper-{{ ai_gen_id }}:hover .ai-product-image-secondary-{{ ai_gen_id }} {
    opacity: 1;
  }

  .ai-product-price-{{ ai_gen_id }} {
    font-size: 16px;
    font-weight: 600;
    color: #000;
    margin-bottom: 8px;
  }

  .ai-product-price-compare-{{ ai_gen_id }} {
    text-decoration: line-through;
    color: #999;
    margin-right: 6px;
  }

{% endstyle %}

<product-cards-collection-{{ ai_gen_id }} class="ai-product-cards-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  <div class="ai-product-cards-container-{{ ai_gen_id }}">
    {% assign collection = block.settings.collection %}
    {% if collection and collection.products.size > 0 %}
      <div class="ai-product-cards-grid-{{ ai_gen_id }}">
        {% for product in collection.products limit: block.settings.products_limit %}
          {% assign first_variant = product.selected_or_first_available_variant %}
          {% assign featured_image = first_variant.featured_image | default: product.featured_image %}
          <div class="ai-product-card-{{ ai_gen_id }}" data-product-handle="{{ product.handle }}">
            <div class="ai-product-image-wrapper-{{ ai_gen_id }}">
              <img 
                src="{{ featured_image | image_url: width: 600 }}" 
                alt="{{ product.title }}" 
                class="ai-product-image-primary-{{ ai_gen_id }}"
                data-original-src="{{ featured_image | image_url: width: 600 }}"
              >
              {% if product.images.size > 1 %}
                <img 
                  src="{{ product.images[1] | image_url: width: 600 }}" 
                  alt="{{ product.title }} secondary image"
                  class="ai-product-image-secondary-{{ ai_gen_id }}"
                >
              {% endif %}
            </div>

            <div class="ai-product-content-{{ ai_gen_id }}">
              <a href="{{ product.url }}" class="ai-product-title-{{ ai_gen_id }}">
                {{ product.title }}
              </a>

              <div class="ai-product-price-{{ ai_gen_id }}">
                {% if first_variant.compare_at_price > first_variant.price %}
                  <span class="ai-product-price-compare-{{ ai_gen_id }}">{{ first_variant.compare_at_price | money }}</span>
                {% endif %}
                {{ first_variant.price | money }}
              </div>

              <div class="ai-product-variants-{{ ai_gen_id }}">
                {% if product.variants.size > 1 %}
                  <select class="ai-variant-dropdown-{{ ai_gen_id }}">
                    {% for variant in product.variants %}
                      <option value="{{ variant.id }}" data-image="{{ variant.featured_image.src | default: '' }}" data-price="{{ variant.price }}" data-compare="{{ variant.compare_at_price }}">
                        {{ variant.title }}
                      </option>
                    {% endfor %}
                  </select>
                {% endif %}
                <button 
                  class="ai-add-to-cart-button-{{ ai_gen_id }}" 
                  data-variant-id="{{ first_variant.id }}" 
                  {% unless first_variant.available %}disabled{% endunless %}
                >
                  {% if first_variant.available %}Add to Cart{% else %}Sold Out{% endif %}
                </button>
              </div>
            </div>
          </div>
        {% endfor %}
      </div>
    {% else %}
      <p>No products found in this collection.</p>
    {% endif %}
  </div>
</product-cards-collection-{{ ai_gen_id }}>

<script>
(() => {
  class ProductCards{{ ai_gen_id }} extends HTMLElement {
    connectedCallback() {
      this.initVariantChange();
      this.initAddToCart();
    }

    initVariantChange() {
      this.querySelectorAll('.ai-variant-dropdown-{{ ai_gen_id }}').forEach(dropdown => {
        dropdown.addEventListener('change', async (e) => {
          const card = e.target.closest('.ai-product-card-{{ ai_gen_id }}');
          const variantId = e.target.value;
          const productHandle = card.dataset.productHandle;

          const response = await fetch(`/products/${productHandle}.js`);
          const product = await response.json();
          const variant = product.variants.find(v => v.id == variantId);
          const priceEl = card.querySelector('.ai-product-price-{{ ai_gen_id }}');
          const imgEl = card.querySelector('.ai-product-image-primary-{{ ai_gen_id }}');
          const addBtn = card.querySelector('.ai-add-to-cart-button-{{ ai_gen_id }}');

          if (variant) {
            // Update price
            if (variant.compare_at_price && variant.compare_at_price > variant.price) {
              priceEl.innerHTML = `
                <span class="ai-product-price-compare-{{ ai_gen_id }}">${this.formatMoney(variant.compare_at_price)}</span>
                ${this.formatMoney(variant.price)}
              `;
            } else {
              priceEl.innerHTML = this.formatMoney(variant.price);
            }

            // Update image
            if (variant.featured_image) {
              imgEl.src = variant.featured_image.src.replace('.jpg', '_600x.jpg');
            }

            // Update Add to Cart
            addBtn.dataset.variantId = variant.id;
            addBtn.disabled = !variant.available;
            addBtn.textContent = variant.available ? 'Add to Cart' : 'Sold Out';
          }
        });
      });
    }

    initAddToCart() {
      this.querySelectorAll('.ai-add-to-cart-button-{{ ai_gen_id }}').forEach(button => {
        button.addEventListener('click', async (e) => {
          const variantId = e.target.dataset.variantId;
          if (!variantId) return;

          e.target.textContent = 'Adding...';
          e.target.disabled = true;

          const res = await fetch('/cart/add.js', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ id: variantId, quantity: 1 })
          });

          if (res.ok) {
            e.target.textContent = 'Added!';
            document.dispatchEvent(new CustomEvent('cart:refresh'));
            setTimeout(() => {
              e.target.textContent = 'Add to Cart';
              e.target.disabled = false;
            }, 1500);
          } else {
            e.target.textContent = 'Error';
            setTimeout(() => {
              e.target.textContent = 'Add to Cart';
              e.target.disabled = false;
            }, 1500);
          }
        });
      });
    }

    formatMoney(cents) {
      return new Intl.NumberFormat('{{ shop.locale }}', {
        style: 'currency',
        currency: '{{ shop.currency }}'
      }).format(cents / 100);
    }
  }

  customElements.define('product-cards-collection-{{ ai_gen_id }}', ProductCards{{ ai_gen_id }});
})();
</script>


{% schema %}
{
  "name": "Product cards collection",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Collection"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "range",
      "id": "products_limit",
      "min": 1,
      "max": 50,
      "step": 1,
      "label": "Products to show",
      "default": 8
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "label": "Columns on desktop",
      "default": 4
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "label": "Columns on mobile",
      "options": [
        { "value": "1", "label": "1" },
        { "value": "2", "label": "2" }
      ],
      "default": "2"
    },
    {
      "type": "range",
      "id": "grid_gap",
      "min": 10,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Grid gap",
      "default": 20
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Section padding",
      "default": 40
    },
    {
      "type": "header",
      "content": "Card style"
    },
    {
      "type": "color",
      "id": "card_background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "card_border_color",
      "label": "Border color",
      "default": "#e5e5e5"
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "card_padding",
      "min": 10,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Card padding",
      "default": 16
    },
    {
      "type": "range",
      "id": "hover_lift",
      "min": 0,
      "max": 10,
      "step": 1,
      "unit": "px",
      "label": "Hover lift",
      "default": 4
    },
    {
      "type": "range",
      "id": "hover_shadow",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Hover shadow",
      "default": 8
    },
    {
      "type": "header",
      "content": "Product image"
    },
    {
      "type": "range",
      "id": "image_aspect_ratio",
      "min": 1,
      "max": 2,
      "step": 0.1,
      "label": "Aspect ratio",
      "default": 1.2
    },
    {
      "type": "range",
      "id": "image_hover_scale",
      "min": 10,
      "max": 12,
      "step": 1,
      "label": "Hover scale",
      "default": 11
    },
    {
      "type": "header",
      "content": "Product title"
    },
    {
      "type": "range",
      "id": "title_font_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 16
    },
    {
      "type": "select",
      "id": "title_font_weight",
      "label": "Font weight",
      "options": [
        { "value": "normal", "label": "Normal" },
        { "value": "bold", "label": "Bold" }
      ],
      "default": "bold"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "title_hover_color",
      "label": "Hover color",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Product price"
    },
    {
      "type": "range",
      "id": "price_font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 14
    },
    {
      "type": "select",
      "id": "price_font_weight",
      "label": "Font weight",
      "options": [
        { "value": "normal", "label": "Normal" },
        { "value": "bold", "label": "Bold" }
      ],
      "default": "bold"
    },
    {
      "type": "color",
      "id": "price_color",
      "label": "Color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "compare_price_color",
      "label": "Compare price color",
      "default": "#999999"
    },
    {
      "type": "header",
      "content": "Product variants"
    },
    {
      "type": "checkbox",
      "id": "show_variants",
      "label": "Show variant options",
      "default": true
    },
    {
      "type": "color",
      "id": "variant_label_color",
      "label": "Label color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "variant_background_color",
      "label": "Background color",
      "default": "#f8f8f8"
    },
    {
      "type": "color",
      "id": "variant_text_color",
      "label": "Text color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "variant_border_color",
      "label": "Border color",
      "default": "#dddddd"
    },
    {
      "type": "color",
      "id": "variant_hover_background",
      "label": "Hover background",
      "default": "#e8e8e8"
    },
    {
      "type": "color",
      "id": "variant_hover_border",
      "label": "Hover border",
      "default": "#cccccc"
    },
    {
      "type": "range",
      "id": "variant_border_radius",
      "min": 0,
      "max": 10,
      "step": 1,
      "unit": "px",
      "label": "Border radius",
      "default": 4
    },
    {
      "type": "header",
      "content": "Add to cart button"
    },
    {
      "type": "text",
      "id": "add_to_cart_text",
      "label": "Button text",
      "default": "Add to Cart"
    },
    {
      "type": "range",
      "id": "button_font_size",
      "min": 10,
      "max": 16,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 12
    },
    {
      "type": "select",
      "id": "button_font_weight",
      "label": "Font weight",
      "options": [
        { "value": "normal", "label": "Normal" },
        { "value": "bold", "label": "Bold" }
      ],
      "default": "bold"
    },
    {
      "type": "range",
      "id": "button_height",
      "min": 30,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Button height",
      "default": 36
    },
    {
      "type": "range",
      "id": "button_padding",
      "min": 8,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Horizontal padding",
      "default": 12
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 6
    },
    {
      "type": "color",
      "id": "button_background_color",
      "label": "Background color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_background",
      "label": "Hover background",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "button_hover_text_color",
      "label": "Hover text color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Sale badge"
    },
    {
      "type": "color",
      "id": "badge_background_color",
      "label": "Background color",
      "default": "#ff4444"
    },
    {
      "type": "color",
      "id": "badge_text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "badge_border_radius",
      "min": 0,
      "max": 10,
      "step": 1,
      "unit": "px",
      "label": "Border radius",
      "default": 4
    }
  ],
  "presets": [
    {
      "name": "Product cards collection"
    }
  ]
}
{% endschema %}

