{% style %}
  /* --- CARD STYLES --- */
  .ai-product-cards-{{ ai_gen_id }} { padding: {{ block.settings.section_padding }}px 0; }
  .ai-product-cards-container-{{ ai_gen_id }} { max-width: 1200px; margin: 0 auto; padding: 0 20px; }

  .ai-product-cards-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat({{ block.settings.columns_desktop }}, 1fr);
    gap: {{ block.settings.grid_gap }}px;
  }

  @media screen and (max-width: 749px) {
    .ai-product-cards-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat({{ block.settings.columns_mobile }}, 1fr);
      gap: 14px;
    }
  }
.ai-product-cards-layout-{{ ai_gen_id }} {
  display: flex;
  gap: 20px;
}

/* Left sidebar */
.ai-product-sidebar-{{ ai_gen_id }} {
  width: 220px;
  flex-shrink: 0;
}

/* Right grid wrapper */
.ai-product-grid-wrapper-{{ ai_gen_id }} {
  flex-grow: 1;
}

/* Breadcrumbs styling */
.ai-breadcrumbs-{{ ai_gen_id }} a {
  color: {{ block.settings.breadcrumb_link_color }};
  text-decoration: none;
  font-size: {{ block.settings.breadcrumb_font_size }}px;
  margin-right: 4px;
}

.ai-breadcrumbs-{{ ai_gen_id }} a:hover {
  color: {{ block.settings.breadcrumb_link_hover_color }};
}

/* Filters styling */
.ai-filters-{{ ai_gen_id }} h4 {
  margin-bottom: 8px;
}

.ai-filter-checkbox-{{ ai_gen_id }} {
  margin-right: 6px;
}

/* Mobile responsiveness */
@media screen and (max-width: 749px) {
  .ai-product-cards-layout-{{ ai_gen_id }} {
    flex-direction: column;
  }

  .ai-product-sidebar-{{ ai_gen_id }} {
    width: 100%;
    margin-bottom: 20px;
  }

  .ai-product-grid-wrapper-{{ ai_gen_id }} {
    width: 100%;
  }

  .ai-product-card-{{ ai_gen_id }} {
    background-color: {{ block.settings.card_background_color }};
    border-radius: {{ block.settings.card_border_radius }}px;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: 1px solid {{ block.settings.card_border_color }};
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .ai-product-card-{{ ai_gen_id }}:hover {
    transform: translateY(-{{ block.settings.hover_lift }}px);
    box-shadow: 0 {{ block.settings.hover_shadow }}px {{ block.settings.hover_shadow | times: 2 }}px rgba(0,0,0,0.1);
  }

  /* Image wrapper and images - keep same size across products */
  .ai-product-image-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    aspect-ratio: 1/1; /* square and equal size for mobile and desktop */
    overflow: hidden;
    background-color: #f9f9f9;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .ai-product-image-{{ ai_gen_id }},
  .ai-product-image-secondary-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: contain;
    object-position: center;
    transition: transform 0.3s ease, opacity 0.3s ease;
    position: absolute;
    top: 0;
    left: 0;
  }

  .ai-product-image-secondary-{{ ai_gen_id }} {
    opacity: 0;
  }

  /* Hover effect */
  .ai-product-image-wrapper-{{ ai_gen_id }}:hover .ai-product-image-{{ ai_gen_id }} {
    transform: scale({{ block.settings.image_hover_scale | divided_by: 10.0 }});
  }

  .ai-product-image-wrapper-{{ ai_gen_id }}:hover .ai-product-image-secondary-{{ ai_gen_id }} {
    opacity: 1;
  }

  .ai-product-badge-{{ ai_gen_id }} {
    position: absolute;
    top: 10px;
    left: 10px;
    background-color: {{ block.settings.badge_background_color }};
    color: {{ block.settings.badge_text_color }};
    padding: 4px 8px;
    border-radius: {{ block.settings.badge_border_radius }}px;
    font-size: 12px;
    font-weight: bold;
    text-transform: uppercase;
    z-index: 2;
  }

  .ai-product-content-{{ ai_gen_id }} {
    padding: {{ block.settings.card_padding }}px;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }

  .ai-product-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_font_size }}px;
    font-weight: {{ block.settings.title_font_weight }};
    color: {{ block.settings.title_color }};
    margin: 0 0 8px;
    line-height: 1.3;
    text-decoration: none;
    display: block;
  }

  .ai-product-title-{{ ai_gen_id }}:hover { color: {{ block.settings.title_hover_color }}; }

  .ai-product-price-{{ ai_gen_id }} {
    font-size: clamp(16px, 4vw, {{ block.settings.price_font_size }}px);
    font-weight: {{ block.settings.price_font_weight }};
    color: {{ block.settings.price_color }};
    margin-bottom: 12px;
  }

  .ai-product-price-compare-{{ ai_gen_id }} {
    text-decoration: line-through;
    color: {{ block.settings.compare_price_color }};
    margin-right: 8px;
  }

  .ai-product-actions-{{ ai_gen_id }} {
    margin-top: auto;
    display: flex;
    gap: 8px;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;
  }

  .ai-variant-dropdown-{{ ai_gen_id }} {
    flex: 1;
    padding: 8px 10px;
    font-size: 13px;
    border: 1px solid #ddd;
    border-radius: 6px;
    cursor: pointer;
    min-width: 55%;
  }

  .ai-add-to-cart-button-{{ ai_gen_id }} {
    flex-shrink: 0;
    width: auto;
    padding: 8px 14px;
    font-size: 13px;
    border-radius: 6px;
    background-color: {{ block.settings.button_background_color }};
    color: {{ block.settings.button_text_color }};
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    white-space: nowrap;
  }

  .ai-add-to-cart-button-{{ ai_gen_id }}:disabled {
    background-color: #ccc;
    color: #666;
    cursor: not-allowed;
  }

  /* --- MOBILE OPTIMIZATION --- */
  @media screen and (max-width: 749px) {
    .ai-product-content-{{ ai_gen_id }} {
      padding: 10px;
    }

    .ai-product-title-{{ ai_gen_id }} {
      font-size: 14px;
      line-height: 1.4;
    }

    .ai-product-actions-{{ ai_gen_id }} {
      flex-direction: column;
      gap: 6px;
      align-items: stretch;
    }

    .ai-variant-dropdown-{{ ai_gen_id }},
    .ai-add-to-cart-button-{{ ai_gen_id }} {
      width: 100%;
      font-size: 13px;
      padding: 8px 10px;
    }
  }
{% endstyle %}



<product-cards-collection-{{ ai_gen_id }} class="ai-product-cards-{{ ai_gen_id }}">
  <div class="ai-product-cards-container-{{ ai_gen_id }}">
    <div class="ai-product-cards-layout-{{ ai_gen_id }}">
      <!-- LEFT SIDEBAR: Breadcrumbs + Filters -->
      <aside class="ai-product-sidebar-{{ ai_gen_id }}">
        {% if block.settings.show_breadcrumbs %}
          <nav class="ai-breadcrumbs-{{ ai_gen_id }}">
            <a href="/">Home</a> /
            {% if collection %}<a href="{{ collection.url }}">{{ collection.title }}</a>{% endif %}
          </nav>
        {% endif %}

        {% if block.settings.enable_filtering %}
          <div class="ai-filters-{{ ai_gen_id }}">
            <h4>Filter by:</h4>
            <!-- Example: Tag filters -->
            {% assign all_tags = collection.all_tags %}
            {% for tag in all_tags %}
              <label>
                <input type="checkbox" class="ai-filter-checkbox-{{ ai_gen_id }}" value="{{ tag }}">
                {{ tag }}
              </label><br>
            {% endfor %}
          </div>
        {% endif %}
      </aside>

      <!-- RIGHT GRID: Products -->
      <div class="ai-product-grid-wrapper-{{ ai_gen_id }}">
        {% if block.settings.collection != blank %}
          {% assign collection = block.settings.collection %}
          {% assign products_to_show = block.settings.products_limit %}
          {% if collection.products.size > 0 %}
            <div class="ai-product-cards-grid-{{ ai_gen_id }}">
              {% for product in collection.products limit: products_to_show %}
                <!-- Product card HTML remains the same as your current code -->
                {% include 'product-card', product: product, ai_gen_id: ai_gen_id %}
              {% endfor %}
            </div>
          {% else %}
            <div class="ai-empty-collection-{{ ai_gen_id }}"><h3>No products found</h3></div>
          {% endif %}
        {% else %}
          <div class="ai-empty-collection-{{ ai_gen_id }}"><h3>Select a collection</h3></div>
        {% endif %}
      </div>
    </div>
  </div>
</product-cards-collection-{{ ai_gen_id }}>


<script>
(function() {
  const formatMoneyPHP = (cents) => {
    const amount = (cents / 100).toFixed(2);
    return 'â‚±' + amount.replace(/\B(?=(\d{3})+(?!\d))/g, ',');
  };

  document.querySelectorAll('.ai-product-card-{{ ai_gen_id }}').forEach(card => {
    const dropdown = card.querySelector('.ai-variant-dropdown-{{ ai_gen_id }}');
    const priceEl = card.querySelector('.ai-product-price-{{ ai_gen_id }}');
    const imageEl = card.querySelector('.ai-product-image-primary-{{ ai_gen_id }}');
    const hiddenInput = card.querySelector('.variant-id-input-{{ ai_gen_id }}');
    const button = card.querySelector('.ai-add-to-cart-button-{{ ai_gen_id }}');

    // Set initial price to selected_or_first_available_variant
    const initialVariant = dropdown ? dropdown.selectedOptions[0] : null;
    if (initialVariant) {
      const price = parseInt(initialVariant.dataset.price, 10);
      const compareAt = initialVariant.dataset.compareAt ? parseInt(initialVariant.dataset.compareAt, 10) : null;
      if (compareAt && compareAt > price) {
        priceEl.innerHTML = `<span class="ai-product-price-compare-{{ ai_gen_id }}">${formatMoneyPHP(compareAt)}</span>${formatMoneyPHP(price)}`;
      } else {
        priceEl.innerHTML = formatMoneyPHP(price);
      }
    }

    if (!dropdown) return;

    dropdown.addEventListener('change', e => {
      const selectedOption = e.target.selectedOptions[0];
      const newVariantId = selectedOption.value;

      hiddenInput.value = newVariantId;
      button.dataset.variantId = newVariantId;

      const price = parseInt(selectedOption.dataset.price, 10);
      const compareAt = selectedOption.dataset.compareAt ? parseInt(selectedOption.dataset.compareAt, 10) : null;

      if (compareAt && compareAt > price) {
        priceEl.innerHTML = `<span class="ai-product-price-compare-{{ ai_gen_id }}">${formatMoneyPHP(compareAt)}</span>${formatMoneyPHP(price)}`;
      } else {
        priceEl.innerHTML = formatMoneyPHP(price);
      }

      const newImage = selectedOption.dataset.image;
      if (newImage) {
        const tempImage = new Image();
        tempImage.onload = () => { imageEl.src = newImage; };
        tempImage.src = newImage;
      }

      const secondaryEl = card.querySelector('.ai-product-image-secondary-{{ ai_gen_id }}');
      if (secondaryEl && card.dataset.defaultSecondImage) {
        secondaryEl.src = card.dataset.defaultSecondImage;
      }
    });
  });

  // Initialize default second images for hover
  document.querySelectorAll('.ai-product-card-{{ ai_gen_id }}').forEach(card => {
    const secondaryEl = card.querySelector('.ai-product-image-secondary-{{ ai_gen_id }}');
    if (secondaryEl) {
      card.dataset.defaultSecondImage = secondaryEl.src;
    }
  });
})();
</script>


{% schema %}
{
  "name": "Product cards collection",
  "settings": [
    {
      "type": "header",
      "content": "Collection"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "range",
      "id": "products_limit",
      "min": 1,
      "max": 50,
      "step": 1,
      "label": "Products to show",
      "default": 8
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "label": "Columns on desktop",
      "default": 4
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "label": "Columns on mobile",
      "options": [
        { "value": "1", "label": "1" },
        { "value": "2", "label": "2" }
      ],
      "default": "2"
    },
    {
      "type": "range",
      "id": "grid_gap",
      "min": 10,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Grid gap",
      "default": 20
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Section padding",
      "default": 40
    },
    {
      "type": "header",
      "content": "Card"
    },
    {
      "type": "color",
      "id": "card_background_color",
      "label": "Card background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "card_border_color",
      "label": "Card border color",
      "default": "#dddddd"
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "label": "Card border radius",
      "min": 0,
      "max": 50,
      "default": 8
    },
    {
      "type": "range",
      "id": "card_padding",
      "label": "Card padding",
      "min": 0,
      "max": 50,
      "default": 10
    },
    {
      "type": "range",
      "id": "hover_lift",
      "label": "Hover lift",
      "min": 0,
      "max": 20,
      "default": 4
    },
    {
      "type": "range",
      "id": "hover_shadow",
      "label": "Hover shadow",
      "min": 0,
      "max": 20,
      "default": 6
    },
    {
      "type": "range",
      "id": "image_hover_scale",
      "label": "Image hover scale (x10)",
      "min": 10,
      "max": 20,
      "default": 11
    },
    {
      "type": "header",
      "content": "Title & Price"
    },
    {
      "type": "range",
      "id": "title_font_size",
      "label": "Title font size",
      "min": 10,
      "max": 36,
      "default": 16
    },
    {
      "type": "select",
      "id": "title_font_weight",
      "label": "Title font weight",
      "options": [
        { "value": "400", "label": "Normal" },
        { "value": "500", "label": "Medium" },
        { "value": "600", "label": "Semi-bold" },
        { "value": "700", "label": "Bold" }
      ],
      "default": "500"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "title_hover_color",
      "label": "Title hover color",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "price_font_size",
      "label": "Price font size",
      "min": 10,
      "max": 36,
      "default": 16
    },
    {
      "type": "select",
      "id": "price_font_weight",
      "label": "Price font weight",
      "options": [
        { "value": "400", "label": "Normal" },
        { "value": "500", "label": "Medium" },
        { "value": "600", "label": "Semi-bold" },
        { "value": "700", "label": "Bold" }
      ],
      "default": "500"
    },
    {
      "type": "color",
      "id": "price_color",
      "label": "Price color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "compare_price_color",
      "label": "Compare price color",
      "default": "#999999"
    },
    {
      "type": "header",
      "content": "Variant & Button"
    },
    {
      "type": "color",
      "id": "button_background_color",
      "label": "Button background color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "text",
      "id": "add_to_cart_text",
      "label": "Add to cart button text",
      "default": "Add to Cart"
    },
    {
      "type": "header",
      "content": "Badge"
    },
    {
      "type": "color",
      "id": "badge_background_color",
      "label": "Badge background color",
      "default": "#ff0000"
    },
    {
      "type": "color",
      "id": "badge_text_color",
      "label": "Badge text color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "badge_border_radius",
      "label": "Badge border radius",
      "min": 0,
      "max": 50,
      "default": 4
    },
    {
      "type": "header",
      "content": "Filtering & Sorting"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "label": "Enable filtering",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "label": "Enable sorting",
      "default": true
    },
    {
      "type": "select",
      "id": "sort_default",
      "label": "Default sort option",
      "options": [
        { "value": "manual", "label": "Manual" },
        { "value": "best-selling", "label": "Best selling" },
        { "value": "title-ascending", "label": "Alphabetically, A-Z" },
        { "value": "title-descending", "label": "Alphabetically, Z-A" },
        { "value": "price-ascending", "label": "Price, low to high" },
        { "value": "price-descending", "label": "Price, high to low" },
        { "value": "created-ascending", "label": "Date, old to new" },
        { "value": "created-descending", "label": "Date, new to old" }
      ],
      "default": "manual"
    },
    {
      "type": "header",
      "content": "Breadcrumbs"
    },
    {
      "type": "checkbox",
      "id": "show_breadcrumbs",
      "label": "Show breadcrumbs",
      "default": true
    },
    {
      "type": "color",
      "id": "breadcrumb_text_color",
      "label": "Text color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "breadcrumb_link_color",
      "label": "Link color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "breadcrumb_link_hover_color",
      "label": "Link hover color",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "breadcrumb_font_size",
      "label": "Font size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "default": 14
    }
  ],
  "presets": [
    {
      "name": "Product cards collection"
    }
  ]
}
{% endschema %}
