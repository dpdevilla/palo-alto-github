{% doc %}
  @prompt
    Result: Before & After Section
    with slider button
    
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-before-after-container-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    max-width: {{ block.settings.max_width }}px;
    margin: 0 auto;
    background-color: {{ block.settings.background_color }};
    border-radius: {% if settings.show_rounded_corners %}8px{% else %}0{% endif %};
    overflow: hidden;
  }

  .ai-before-after-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    height: {{ block.settings.container_height }}px;
    overflow: hidden;
    cursor: grab;
    user-select: none;
  }

  .ai-before-after-wrapper-{{ ai_gen_id }}:active {
    cursor: grabbing;
  }

  .ai-before-after-image-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-before-after-before-{{ ai_gen_id }} {
    z-index: 2;
    clip-path: inset(0 50% 0 0);
    transition: clip-path 0.3s ease;
  }

  .ai-before-after-after-{{ ai_gen_id }} {
    z-index: 1;
  }

  .ai-before-after-slider-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 50%;
    width: 4px;
    height: 100%;
    background-color: {{ block.settings.slider_color }};
    z-index: 3;
    transform: translateX(-50%);
    transition: left 0.3s ease;
  }

  .ai-before-after-handle-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    left: 50%;
    width: {{ block.settings.handle_size }}px;
    height: {{ block.settings.handle_size }}px;
    background-color: {{ block.settings.slider_color }};
    border: 3px solid {{ block.settings.handle_border_color }};
    border-radius: 50%;
    transform: translate(-50%, -50%);
    cursor: grab;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  }

  .ai-before-after-handle-{{ ai_gen_id }}:active {
    cursor: grabbing;
  }

  .ai-before-after-handle-{{ ai_gen_id }} svg {
    width: calc({{ block.settings.handle_size }}px * 0.4);
    height: calc({{ block.settings.handle_size }}px * 0.4);
    color: {{ block.settings.handle_icon_color }};
  }

  .ai-before-after-label-{{ ai_gen_id }} {
    position: absolute;
    top: {{ block.settings.label_position_y }}px;
    padding: 8px 16px;
    background-color: {{ block.settings.label_bg_color }};
    color: {{ block.settings.label_text_color }};
    font-size: {{ block.settings.label_font_size }}px;
    font-weight: {% if settings.label_font_weight == 'bold' %}700{% elsif settings.label_font_weight == 'light' %}300{% else %}400{% endif %};
    border-radius: {% if settings.show_rounded_corners %}4px{% else %}0{% endif %};
    z-index: 4;
    {% if block.settings.label_uppercase %}text-transform: uppercase;{% endif %}
    {% if block.settings.label_letter_spacing > 0 %}letter-spacing: {{ block.settings.label_letter_spacing }}px;{% endif %}
  }

  .ai-before-after-label-before-{{ ai_gen_id }} {
    left: {{ block.settings.label_position_x }}px;
  }

  .ai-before-after-label-after-{{ ai_gen_id }} {
    right: {{ block.settings.label_position_x }}px;
  }

  .ai-before-after-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: {{ block.settings.container_height }}px;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-before-after-placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    max-width: 200px;
    max-height: 200px;
    opacity: 0.3;
  }

  .ai-before-after-empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 12px 20px;
    background-color: rgba(255, 255, 255, 0.9);
    border-radius: 4px;
    font-size: 14px;
    color: #666;
    text-align: center;
    pointer-events: none;
  }

  @media screen and (max-width: 749px) {
    .ai-before-after-container-{{ ai_gen_id }} {
      max-width: 100%;
    }

    .ai-before-after-wrapper-{{ ai_gen_id }} {
      height: {{ block.settings.container_height | times: 0.8 }}px;
    }

    .ai-before-after-placeholder-{{ ai_gen_id }} {
      height: {{ block.settings.container_height | times: 0.8 }}px;
    }

    .ai-before-after-handle-{{ ai_gen_id }} {
      width: {{ block.settings.handle_size | times: 0.8 }}px;
      height: {{ block.settings.handle_size | times: 0.8 }}px;
    }

    .ai-before-after-handle-{{ ai_gen_id }} svg {
      width: calc({{ block.settings.handle_size | times: 0.8 }}px * 0.4);
      height: calc({{ block.settings.handle_size | times: 0.8 }}px * 0.4);
    }

    .ai-before-after-label-{{ ai_gen_id }} {
      font-size: {{ block.settings.label_font_size | times: 0.9 }}px;
      padding: 6px 12px;
    }
  }
{% endstyle %}

<before-after-slider-{{ ai_gen_id }}
  class="ai-before-after-container-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  {% if block.settings.before_image and block.settings.after_image %}
    <div class="ai-before-after-wrapper-{{ ai_gen_id }}">
      <img
        src="{{ block.settings.after_image | image_url: width: 2000 }}"
        alt="{{ block.settings.after_image.alt | escape }}"
        class="ai-before-after-image-{{ ai_gen_id }} ai-before-after-after-{{ ai_gen_id }}"
        loading="lazy"
        width="{{ block.settings.after_image.width }}"
        height="{{ block.settings.after_image.height }}"
      >
      
      <img
        src="{{ block.settings.before_image | image_url: width: 2000 }}"
        alt="{{ block.settings.before_image.alt | escape }}"
        class="ai-before-after-image-{{ ai_gen_id }} ai-before-after-before-{{ ai_gen_id }}"
        loading="lazy"
        width="{{ block.settings.before_image.width }}"
        height="{{ block.settings.before_image.height }}"
      >

      <div class="ai-before-after-slider-{{ ai_gen_id }}">
        <div class="ai-before-after-handle-{{ ai_gen_id }}">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <polyline points="5,12 10,7 10,17"></polyline>
            <polyline points="19,12 14,7 14,17"></polyline>
          </svg>
        </div>
      </div>

      {% if block.settings.show_labels %}
        {% if block.settings.before_label != blank %}
          <div class="ai-before-after-label-{{ ai_gen_id }} ai-before-after-label-before-{{ ai_gen_id }}">
            {{ block.settings.before_label }}
          </div>
        {% endif %}

        {% if block.settings.after_label != blank %}
          <div class="ai-before-after-label-{{ ai_gen_id }} ai-before-after-label-after-{{ ai_gen_id }}">
            {{ block.settings.after_label }}
          </div>
        {% endif %}
      {% endif %}
    </div>
  {% else %}
    <div class="ai-before-after-placeholder-{{ ai_gen_id }}">
      {{ 'image' | placeholder_svg_tag }}
      <div class="ai-before-after-empty-state-{{ ai_gen_id }}">
        Add before and after images to get started
      </div>
    </div>
  {% endif %}
</before-after-slider-{{ ai_gen_id }}>

<script>
  (function() {
    class BeforeAfterSlider{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.isDragging = false;
        this.startX = 0;
        this.currentPosition = 50;
      }

      connectedCallback() {
        this.wrapper = this.querySelector('.ai-before-after-wrapper-{{ ai_gen_id }}');
        this.beforeImage = this.querySelector('.ai-before-after-before-{{ ai_gen_id }}');
        this.slider = this.querySelector('.ai-before-after-slider-{{ ai_gen_id }}');
        this.handle = this.querySelector('.ai-before-after-handle-{{ ai_gen_id }}');

        if (!this.wrapper || !this.beforeImage || !this.slider || !this.handle) {
          return;
        }

        this.setupEventListeners();
      }

      setupEventListeners() {
        this.handle.addEventListener('mousedown', this.startDrag.bind(this));
        this.handle.addEventListener('touchstart', this.startDrag.bind(this), { passive: false });
        
        this.wrapper.addEventListener('click', this.handleClick.bind(this));
        
        document.addEventListener('mousemove', this.drag.bind(this));
        document.addEventListener('touchmove', this.drag.bind(this), { passive: false });
        
        document.addEventListener('mouseup', this.stopDrag.bind(this));
        document.addEventListener('touchend', this.stopDrag.bind(this));
      }

      startDrag(e) {
        this.isDragging = true;
        this.startX = this.getEventX(e);
        e.preventDefault();
      }

      drag(e) {
        if (!this.isDragging) return;

        const rect = this.wrapper.getBoundingClientRect();
        const x = this.getEventX(e) - rect.left;
        const percentage = Math.max(0, Math.min(100, (x / rect.width) * 100));
        
        this.updatePosition(percentage);
        e.preventDefault();
      }

      stopDrag() {
        this.isDragging = false;
      }

      handleClick(e) {
        if (this.isDragging) return;

        const rect = this.wrapper.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const percentage = Math.max(0, Math.min(100, (x / rect.width) * 100));
        
        this.updatePosition(percentage);
      }

      updatePosition(percentage) {
        this.currentPosition = percentage;
        
        this.slider.style.left = percentage + '%';
        this.beforeImage.style.clipPath = `inset(0 ${100 - percentage}% 0 0)`;
      }

      getEventX(e) {
        return e.type.includes('touch') ? e.touches[0].clientX : e.clientX;
      }
    }

    customElements.define('before-after-slider-{{ ai_gen_id }}', BeforeAfterSlider{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Before & after slider",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Images"
    },
    {
      "type": "image_picker",
      "id": "before_image",
      "label": "Before image"
    },
    {
      "type": "image_picker",
      "id": "after_image",
      "label": "After image"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "max_width",
      "min": 300,
      "max": 1200,
      "step": 50,
      "unit": "px",
      "label": "Maximum width",
      "default": 800
    },
    {
      "type": "range",
      "id": "container_height",
      "min": 200,
      "max": 800,
      "step": 50,
      "unit": "px",
      "label": "Height",
      "default": 500
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Slider"
    },
    {
      "type": "color",
      "id": "slider_color",
      "label": "Slider line color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "handle_size",
      "min": 30,
      "max": 80,
      "step": 5,
      "unit": "px",
      "label": "Handle size",
      "default": 50
    },
    {
      "type": "color",
      "id": "handle_border_color",
      "label": "Handle border color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "handle_icon_color",
      "label": "Handle icon color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Labels"
    },
    {
      "type": "checkbox",
      "id": "show_labels",
      "label": "Show labels",
      "default": true
    },
    {
      "type": "text",
      "id": "before_label",
      "label": "Before label",
      "default": "Before"
    },
    {
      "type": "text",
      "id": "after_label",
      "label": "After label",
      "default": "After"
    },
    {
      "type": "range",
      "id": "label_font_size",
      "min": 10,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 14
    },
    {
      "type": "checkbox",
      "id": "label_uppercase",
      "label": "Uppercase",
      "default": true
    },
    {
      "type": "range",
      "id": "label_letter_spacing",
      "min": 0,
      "max": 3,
      "step": 0.5,
      "unit": "px",
      "label": "Letter spacing",
      "default": 1
    },
    {
      "type": "range",
      "id": "label_position_x",
      "min": 10,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Horizontal position",
      "default": 20
    },
    {
      "type": "range",
      "id": "label_position_y",
      "min": 10,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Vertical position",
      "default": 20
    },
    {
      "type": "color",
      "id": "label_bg_color",
      "label": "Background color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "label_text_color",
      "label": "Text color",
      "default": "#ffffff"
    }
  ],
  "presets": [
    {
      "name": "Before & after slider"
    }
  ]
}
{% endschema %}