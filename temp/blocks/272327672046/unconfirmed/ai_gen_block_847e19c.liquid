{% doc %}
  @prompt
    1.	Hero Section (Image or Video, above the fold)
    o	Strong headline
    o	Clear CTA button
    2.	Influencer Endorsement
    o	Short personal story or testimonial from Iza
    o	Optional: short video clip
    3.	Product Spotlight
    o	Combination of lifestyle + product images
    o	Benefit bullet points (not just features)
    o	Show price + any limited-time promo
    4.	Result: Before & After Section
    5.	Social Proof
    o	Customer reviews with star ratings
    o	User-generated content (UGC) or influencer-tagged posts
    6.	Key Ingredients & Benefits
    7.	How to Use
    o	Step-by-step directions
    o	Add icons or images for clarity
    8.	Limited-Time Offer / Urgency
    o	Example: “Get 15% off today – while stocks last.”
    o	Option to add countdown timer
    9.	FAQ Section (Optional)
    10.	Final Call-to-Action
    •	Hero-style banner (Iza + featured product)
    •	Strong button: Buy Now / Add to Cart
    
    Note: Since the landing page is quite long, we’ll add a sticky “Add to Cart” button so it’s always visible as the customer scrolls down.
    
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-before-after-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding_top }}px 20px {{ block.settings.section_padding_bottom }}px;
    background-color: {{ block.settings.background_color }};
  }

  .ai-before-after-container-{{ ai_gen_id }} {
    max-width: {{ block.settings.container_width }}px;
    margin: 0 auto;
    text-align: center;
  }

  .ai-before-after-heading-{{ ai_gen_id }} {
    font-size: {{ block.settings.heading_size }}px;
    font-weight: 700;
    line-height: 1.2;
    margin: 0 0 15px;
    color: {{ block.settings.text_color }};
  }

  .ai-before-after-subheading-{{ ai_gen_id }} {
    font-size: {{ block.settings.subheading_size }}px;
    line-height: 1.5;
    margin: 0 0 50px;
    color: {{ block.settings.text_color }};
    opacity: 0.8;
  }

  .ai-before-after-comparison-{{ ai_gen_id }} {
    position: relative;
    max-width: 800px;
    margin: 0 auto 40px;
    border-radius: {{ block.settings.image_border_radius }}px;
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  }

  .ai-before-after-images-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    height: 400px;
    overflow: hidden;
  }

  .ai-before-after-image-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-before-image-{{ ai_gen_id }} {
    left: 0;
    clip-path: inset(0 50% 0 0);
  }

  .ai-after-image-{{ ai_gen_id }} {
    right: 0;
    clip-path: inset(0 0 0 50%);
  }

  .ai-before-after-slider-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 50%;
    width: 4px;
    height: 100%;
    background-color: {{ block.settings.slider_color }};
    cursor: ew-resize;
    transform: translateX(-50%);
    z-index: 3;
  }

  .ai-before-after-handle-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 40px;
    height: 40px;
    background-color: {{ block.settings.slider_color }};
    border: 3px solid white;
    border-radius: 50%;
    transform: translate(-50%, -50%);
    cursor: ew-resize;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  }

  .ai-before-after-handle-{{ ai_gen_id }}::before,
  .ai-before-after-handle-{{ ai_gen_id }}::after {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    border-style: solid;
  }

  .ai-before-after-handle-{{ ai_gen_id }}::before {
    border-width: 6px 8px 6px 0;
    border-color: transparent white transparent transparent;
    left: 10px;
  }

  .ai-before-after-handle-{{ ai_gen_id }}::after {
    border-width: 6px 0 6px 8px;
    border-color: transparent transparent transparent white;
    right: 10px;
  }

  .ai-before-after-labels-{{ ai_gen_id }} {
    position: absolute;
    top: 20px;
    left: 0;
    right: 0;
    display: flex;
    justify-content: space-between;
    padding: 0 20px;
    z-index: 2;
  }

  .ai-before-after-label-{{ ai_gen_id }} {
    background-color: {{ block.settings.label_bg_color }};
    color: {{ block.settings.label_text_color }};
    padding: 8px 16px;
    border-radius: {{ block.settings.label_border_radius }}px;
    font-size: {{ block.settings.label_size }}px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .ai-before-after-results-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 30px;
    margin-top: 40px;
  }

  .ai-before-after-result-{{ ai_gen_id }} {
    text-align: center;
  }

  .ai-before-after-stat-{{ ai_gen_id }} {
    font-size: {{ block.settings.stat_size }}px;
    font-weight: 700;
    color: {{ block.settings.accent_color }};
    margin: 0 0 8px;
  }

  .ai-before-after-stat-label-{{ ai_gen_id }} {
    font-size: {{ block.settings.stat_label_size }}px;
    color: {{ block.settings.text_color }};
    opacity: 0.8;
  }

  .ai-before-after-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 400px;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: {{ block.settings.image_border_radius }}px;
    position: relative;
  }

  .ai-before-after-empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 12px 20px;
    font-size: 14px;
    color: #666;
    text-align: center;
    pointer-events: none;
  }

  @media screen and (max-width: 768px) {
    .ai-before-after-images-{{ ai_gen_id }} {
      height: 300px;
    }

    .ai-before-after-heading-{{ ai_gen_id }} {
      font-size: {{ block.settings.heading_size | times: 0.8 }}px;
    }

    .ai-before-after-results-{{ ai_gen_id }} {
      grid-template-columns: 1fr 1fr;
      gap: 20px;
    }

    .ai-before-after-labels-{{ ai_gen_id }} {
      padding: 0 15px;
    }
  }
{% endstyle %}

<before-after-slider-{{ ai_gen_id }} class="ai-before-after-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  <div class="ai-before-after-container-{{ ai_gen_id }}">
    {% if block.settings.heading != blank %}
      <h2 class="ai-before-after-heading-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
    {% endif %}

    {% if block.settings.subheading != blank %}
      <div class="ai-before-after-subheading-{{ ai_gen_id }}">{{ block.settings.subheading }}</div>
    {% endif %}

    <div class="ai-before-after-comparison-{{ ai_gen_id }}">
      {% if block.settings.before_image and block.settings.after_image %}
        <div class="ai-before-after-images-{{ ai_gen_id }}">
          <img
            src="{{ block.settings.before_image | image_url: width: 800 }}"
            alt="Before"
            class="ai-before-after-image-{{ ai_gen_id }} ai-before-image-{{ ai_gen_id }}"
            loading="lazy"
          >
          <img
            src="{{ block.settings.after_image | image_url: width: 800 }}"
            alt="After"
            class="ai-before-after-image-{{ ai_gen_id }} ai-after-image-{{ ai_gen_id }}"
            loading="lazy"
          >
          
          <div class="ai-before-after-slider-{{ ai_gen_id }}">
            <div class="ai-before-after-handle-{{ ai_gen_id }}"></div>
          </div>

          <div class="ai-before-after-labels-{{ ai_gen_id }}">
            <div class="ai-before-after-label-{{ ai_gen_id }}">{{ block.settings.before_label }}</div>
            <div class="ai-before-after-label-{{ ai_gen_id }}">{{ block.settings.after_label }}</div>
          </div>
        </div>
      {% else %}
        <div class="ai-before-after-placeholder-{{ ai_gen_id }}">
          {{ 'image' | placeholder_svg_tag }}
          <div class="ai-before-after-empty-state-{{ ai_gen_id }}">
            Add before and after images
          </div>
        </div>
      {% endif %}
    </div>

    {% if block.settings.stat_1 != blank or block.settings.stat_2 != blank or block.settings.stat_3 != blank %}
      <div class="ai-before-after-results-{{ ai_gen_id }}">
        {% if block.settings.stat_1 != blank %}
          <div class="ai-before-after-result-{{ ai_gen_id }}">
            <div class="ai-before-after-stat-{{ ai_gen_id }}">{{ block.settings.stat_1 }}</div>
            <div class="ai-before-after-stat-label-{{ ai_gen_id }}">{{ block.settings.stat_1_label }}</div>
          </div>
        {% endif %}

        {% if block.settings.stat_2 != blank %}
          <div class="ai-before-after-result-{{ ai_gen_id }}">
            <div class="ai-before-after-stat-{{ ai_gen_id }}">{{ block.settings.stat_2 }}</div>
            <div class="ai-before-after-stat-label-{{ ai_gen_id }}">{{ block.settings.stat_2_label }}</div>
          </div>
        {% endif %}

        {% if block.settings.stat_3 != blank %}
          <div class="ai-before-after-result-{{ ai_gen_id }}">
            <div class="ai-before-after-stat-{{ ai_gen_id }}">{{ block.settings.stat_3 }}</div>
            <div class="ai-before-after-stat-label-{{ ai_gen_id }}">{{ block.settings.stat_3_label }}</div>
          </div>
        {% endif %}
      </div>
    {% endif %}
  </div>
</before-after-slider-{{ ai_gen_id }}>

<script>
  (function() {
    class BeforeAfterSlider{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.slider = this.querySelector('.ai-before-after-slider-{{ ai_gen_id }}');
        this.beforeImage = this.querySelector('.ai-before-image-{{ ai_gen_id }}');
        this.afterImage = this.querySelector('.ai-after-image-{{ ai_gen_id }}');
        this.container = this.querySelector('.ai-before-after-images-{{ ai_gen_id }}');

        if (this.slider && this.beforeImage && this.afterImage && this.container) {
          this.setupEventListeners();
        }
      }

      setupEventListeners() {
        let isDragging = false;

        const updateSlider = (clientX) => {
          const rect = this.container.getBoundingClientRect();
          const x = clientX - rect.left;
          const percentage = Math.max(0, Math.min(100, (x / rect.width) * 100));
          
          this.slider.style.left = percentage + '%';
          this.beforeImage.style.clipPath = `inset(0 ${100 - percentage}% 0 0)`;
          this.afterImage.style.clipPath = `inset(0 0 0 ${percentage}%)`;
        };

        this.slider.addEventListener('mousedown', (e) => {
          isDragging = true;
          e.preventDefault();
        });

        document.addEventListener('mousemove', (e) => {
          if (isDragging) {
            updateSlider(e.clientX);
          }
        });

        document.addEventListener('mouseup', () => {
          isDragging = false;
        });

        this.slider.addEventListener('touchstart', (e) => {
          isDragging = true;
          e.preventDefault();
        });

        document.addEventListener('touchmove', (e) => {
          if (isDragging) {
            updateSlider(e.touches[0].clientX);
          }
        });

        document.addEventListener('touchend', () => {
          isDragging = false;
        });

        this.container.addEventListener('click', (e) => {
          if (!isDragging) {
            updateSlider(e.clientX);
          }
        });
      }
    }

    customElements.define('before-after-slider-{{ ai_gen_id }}', BeforeAfterSlider{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Before & after results",
  "settings": [
    {
      "type": "header",
      "content": "Images"
    },
    {
      "type": "image_picker",
      "id": "before_image",
      "label": "Before image"
    },
    {
      "type": "image_picker",
      "id": "after_image",
      "label": "After image"
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Image border radius",
      "default": 12
    },
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Real Results in 7 Days"
    },
    {
      "type": "textarea",
      "id": "subheading",
      "label": "Subheading",
      "default": "See the dramatic transformation our customers experience with consistent use"
    },
    {
      "type": "text",
      "id": "before_label",
      "label": "Before label",
      "default": "Before"
    },
    {
      "type": "text",
      "id": "after_label",
      "label": "After label",
      "default": "After"
    },
    {
      "type": "header",
      "content": "Statistics"
    },
    {
      "type": "text",
      "id": "stat_1",
      "label": "Statistic 1",
      "default": "95%"
    },
    {
      "type": "text",
      "id": "stat_1_label",
      "label": "Statistic 1 label",
      "default": "Saw visible improvement"
    },
    {
      "type": "text",
      "id": "stat_2",
      "label": "Statistic 2",
      "default": "7 Days"
    },
    {
      "type": "text",
      "id": "stat_2_label",
      "label": "Statistic 2 label",
      "default": "To see results"
    },
    {
      "type": "text",
      "id": "stat_3",
      "label": "Statistic 3",
      "default": "100%"
    },
    {
      "type": "text",
      "id": "stat_3_label",
      "label": "Statistic 3 label",
      "default": "Would recommend"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "container_width",
      "min": 800,
      "max": 1400,
      "step": 50,
      "unit": "px",
      "label": "Container width",
      "default": 1200
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "min": 20,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "Top padding",
      "default": 80
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "min": 20,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "Bottom padding",
      "default": 80
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 24,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 36
    },
    {
      "type": "range",
      "id": "subheading_size",
      "min": 14,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Subheading size",
      "default": 18
    },
    {
      "type": "range",
      "id": "label_size",
      "min": 10,
      "max": 16,
      "step": 1,
      "unit": "px",
      "label": "Label size",
      "default": 12
    },
    {
      "type": "range",
      "id": "stat_size",
      "min": 24,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Statistic size",
      "default": 32
    },
    {
      "type": "range",
      "id": "stat_label_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Statistic label size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#fff7f2"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#0b0b0b"
    },
    {
      "type": "color",
      "id": "accent_color",
      "label": "Accent color",
      "default": "#de5757"
    },
    {
      "type": "color",
      "id": "slider_color",
      "label": "Slider color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "label_bg_color",
      "label": "Label background color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "label_text_color",
      "label": "Label text color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "label_border_radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Label border radius",
      "default": 4
    }
  ],
  "presets": [
    {
      "name": "Before & after results"
    }
  ]
}
{% endschema %}