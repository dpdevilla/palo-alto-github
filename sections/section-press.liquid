{% comment %} Press/Logo {% endcomment %}

{%- liquid
  assign section_width = section.settings.width
  assign heading = section.settings.title
  assign show_quotations = section.settings.show_quotations
  assign show_rounded_corners = section.settings.show_rounded_corners
  assign autoplay = section.settings.autoplay
  assign duration = section.settings.duration | times: 1000
  assign color_scheme = 'color-' | append: section.settings.color_scheme
  assign blocks_count = section.blocks.size
  assign logo_opacity_default = section.settings.logo_opacity | default: 100
  assign logo_opacity = logo_opacity_default | times: 0.01
  assign enable_slider_mobile = section.settings.enable_slider_mobile

  assign is_onboarding = false
  assign loop_items = section.blocks
  if blocks_count == 0
    assign is_onboarding = true
    assign loop_items = (1..3)
  endif
  assign press_items = ''
  assign press_logos = ''
  assign press_items_logos = ''

  assign block_link = section.blocks | map: 'settings' | where: 'link', null
  assign block_text = section.blocks | map: 'settings' | where: 'text', ''
  assign no_text = false
  if block_text.size == blocks_count and heading == blank
    assign no_text = true
  endif
  assign no_blockquotes = false
  if block_text.size == blocks_count
    assign no_blockquotes = true
  endif
  assign no_links = false
  if block_link.size == 0
    assign no_links = true
  endif

  assign id = 'Press--' | append: section.id
  assign selector_id = '#' | append: id
  assign animation_anchor = selector_id
  assign animations_enabled = settings.animations_enabled
  assign animation_delay = 150
  assign animation_stacked_delay = 150

  capture section_classes
    echo 'section-padding press'
    if no_blockquotes
      echo ' press--no-blockquotes'
    endif
    if no_links
      echo ' press--no-links'
    endif
    unless enable_slider_mobile
      echo ' press--stacked-mobile'
    endunless
    if show_rounded_corners
      echo ' press--rounded-corners'
    endif
    if no_text
      echo ' press--no-text'
    endif
    if is_onboarding
      echo ' press--onboarding'
    endif
  endcapture
-%}

{%- if request.design_mode -%}
  <style>
    {{ 'section-press.css' | inline_asset_content }}
  </style>
{%- else -%}
  <link
    href="{{ 'section-press.css' | asset_url }}"
    rel="preload"
    as="style"
    onload="this.onload=null;this.rel='stylesheet'"
  >
{%- endif -%}

{%- style -%}
  {{ selector_id }} {
    --PT: {{ section.settings.padding_top }}px;
    --PB: {{ section.settings.padding_bottom }}px;
    --logo-opacity: {{ logo_opacity }};
  }
{%- endstyle -%}

<script src="{{ 'press-component.js' | asset_url }}" defer="defer"></script>

<section
  id="{{ id }}"
  class="{{ section_classes }} {{ color_scheme }}"
  data-section-id="{{ section.id }}"
  data-section-type="press"
  {% if animations_enabled %}
    data-aos-watch-anchors
  {% endif %}
>
  <div class="{{ section_width }}">
    {%- unless heading == blank -%}
      <h4
        class="press__heading subheading-text"
        {% if animations_enabled %}
          data-aos="fade-up"
          data-aos-anchor="{{ animation_anchor }}"
          data-aos-delay="{{ animation_delay }}"
          {%- assign animation_delay = animation_delay | plus: 150 -%}
        {% endif %}
      >
        {{- heading -}}
      </h4>
    {%- endunless -%}
  </div>

  <press-component data-autoplay="{{ autoplay }}" data-duration="{{ duration }}">
    {%- for item in loop_items -%}
      {%- liquid
        if is_onboarding
          assign text = 'homepage.onboarding.press.text' | t
          assign image = blank
          assign link = '#'
          assign has_nested_links = false
          assign image_width = 120
          assign retina_size = 240
          assign image_height = 120
        else
          assign block = item
          assign text = block.settings.text
          assign image = block.settings.press_logo
          assign link = block.settings.link
          assign has_nested_links = false
          assign image_width = block.settings.logo_width
          assign retina_size = image_width | times: 2
          assign image_height = image_width

          unless image == blank
            assign image_height = image_width | divided_by: image.aspect_ratio
            assign image_widths = image_width | append: ', ' | append: retina_size
            assign sizes = image_width | append: 'px'
          endunless

          if link != blank and text contains '</a>'
            assign has_nested_links = true
          endif
        endif

        assign stacked_item_id = 'stackedItem' | append: id | append: forloop.index0
        assign animation_stacked_anchor = '#' | append: stacked_item_id
      -%}

      {% capture press_item %}
        <div
          class="press__item{% if show_quotations %} press__item--quotes{% endif %}"
          {% unless is_onboarding %}
            {{- item.shopify_attributes -}}
          {% endunless %}
        >
          {%- unless text == blank -%}
            <div class="press__item__inner">
              <div class="{{ section_width }}">
                <div class="press__item__content">
                  {%- if show_quotations -%}
                    <span class="press__quote"></span>
                  {%- endif -%}

                  {%- if is_onboarding -%}
                    {{- text -}}
                  {%- else -%}
                    {%- if link != blank and has_nested_links == false -%}
                      <a
                        href="{{ link }}"
                        aria-label="{{ 'homepage.onboarding.press.read_more' | t }}"
                        {% if forloop.index > 1 %}
                          tabindex="-1"
                        {% endif %}
                      >
                        {{- text -}}
                      </a>
                    {%- elsif link != blank and has_nested_links -%}
                      {{- text -}}
                      <a
                        href="{{ link }}"
                        aria-label="{{ 'homepage.onboarding.press.read_more' | t }}"
                        class="press__item__read-more"
                        {% if forloop.index > 1 %}
                          tabindex="-1"
                        {% endif %}
                      >
                        {{- 'homepage.onboarding.press.read_more' | t -}}
                        {%- render 'icon-arrow-right' -%}
                      </a>
                    {%- else -%}
                      {{- text -}}
                    {%- endif -%}
                  {%- endif -%}
                </div>
              </div>
            </div>
          {%- endunless -%}
        </div>
      {% endcapture %}

      {% capture press_logo %}
        <div
          class="press__logos-slide{% if text != blank %} has-text{% endif %}"
          data-logo-slide
          {% unless is_onboarding %}
            data-logo-index="{{ forloop.index0 }}"
          {% endunless %}
        >
          <div
            class="press__logo"
            {% unless is_onboarding %}
              style="--image-width: {{ image_width }}px; --image-height: {{ image_height }}px;"
            {% endunless %}
          >
            {%- if is_onboarding -%}
              <div class="press__logo-image press__logo-image--placeholder">
                {{- 'logo' | placeholder_svg_tag: 'placeholder-svg' -}}
              </div>
            {%- else -%}
              {%- liquid
                assign image_class = 'press__logo-image lazy-image__simple'
                unless image != blank
                  assign image_class = image_class | append: ' press__logo-image--placeholder'
                endunless
                render 'image', image: image, width: retina_size, widths: image_widths, sizes: sizes, classes: image_class, placeholder_svg: 'logo', placeholder_svg_tag: 'placeholder-svg', cover: false, simple: true
              -%}
            {%- endif -%}
          </div>
        </div>
      {% endcapture %}

      {%- assign press_items = press_items | append: press_item -%}
      {%- assign press_logos = press_logos | append: press_logo -%}

      {% capture items_logos_item %}
        <div
          id="{{ stacked_item_id }}"
          class="press__stacked-item"
          {% if animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_stacked_anchor }}"
            data-aos-delay="{{ animation_stacked_delay }}"
            {%- assign animation_stacked_delay = animation_stacked_delay | plus: 50 -%}
          {% endif %}
        >
          {{ press_item }}
          {{ press_logo }}
        </div>
      {% endcapture %}
      {%- assign press_items_logos = press_items_logos | append: items_logos_item -%}
    {%- endfor -%}

    {%- liquid
      assign slider_classes = 'press__slider'
      assign items_classes = 'press__items'
      assign stacked_classes = 'press__stacked'

      unless enable_slider_mobile
        assign slider_classes = slider_classes | append: ' desktop-only'
      endunless
    -%}

    <div class="{{ slider_classes }}">
      <div
        class="{{ items_classes }}"
        data-press-items
        {% if animations_enabled %}
          data-aos="fade-up"
          data-aos-anchor="{{ animation_anchor }}"
          data-aos-delay="{{ animation_delay }}"
          {%- assign animation_delay = animation_delay | plus: 250 -%}
        {% endif %}
      >
        {{ press_items }}
      </div>

      <div
        class="press__logos press__logos--{{ blocks_count }}"
        {% if animations_enabled %}
          data-aos="fade-up"
          data-aos-anchor="{{ animation_anchor }}"
          data-aos-delay="{{ animation_delay }}"
          {%- assign animation_delay = animation_delay | plus: 150 -%}
        {% endif %}
      >
        <div class="press__logos-slider" data-logo-slider>
          {{ press_logos }}
        </div>
      </div>
    </div>

    {% unless enable_slider_mobile %}
      <div class="{{ stacked_classes }} mobile-only" data-press-stacked>
        {{ press_items_logos }}
      </div>
    {% endunless %}
  </press-component>
</section>

{%- if request.design_mode -%}
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      if (window.pressEventHandlersAttached) return;
      window.pressEventHandlersAttached = true;

      function handlePressEvent(event) {
        const target = event.target;
        const pressComponent = target.closest('press-component');

        if (!pressComponent) return;

        const stackedItems = pressComponent.querySelector('[data-press-stacked]');
        if (stackedItems && window.theme.isMobile() && event.type === 'shopify:block:select') {
          setTimeout(() => {
            const index = [...target.parentElement.children].indexOf(target);
            const element = stackedItems.children[index];
            const elementTop = element.getBoundingClientRect().top;
            window.theme.scrollTo(elementTop);
          }, 400);
          return;
        }

        const slider = pressComponent.querySelector('[data-press-items]');
        if (!slider) return;

        const flktyInstance = window.theme.Flickity?.data(slider);
        if (!flktyInstance) return;

        if (event.type === 'shopify:block:select') {
          const slideIndex = parseInt([...target.parentNode.children].indexOf(target));
          setTimeout(() => {
            flktyInstance.select(slideIndex);
            if (typeof flktyInstance.pausePlayer === 'function') flktyInstance.pausePlayer();
          });
        }

        if (event.type === 'shopify:block:deselect') {
          const autoplay = pressComponent.dataset.autoplay === 'true';
          if (autoplay && typeof flktyInstance.playPlayer === 'function') flktyInstance.playPlayer();
        }
      }

      document.addEventListener('shopify:block:select', (event) => handlePressEvent(event));
      document.addEventListener('shopify:block:deselect', (event) => handlePressEvent(event));
    });
  </script>
{%- endif -%}

{% schema %}
{
  "name": "Press/Logo",
  "class": "press-section",
  "max_blocks": 10,
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Press"
    },
    {
      "type": "checkbox",
      "id": "show_quotations",
      "label": "Show quotations",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_rounded_corners",
      "label": "Show rounded corners",
      "default": false
    },
    {
      "type": "range",
      "id": "logo_opacity",
      "label": "Inactive logo opacity",
      "unit": "%",
      "min": 5,
      "max": 100,
      "step": 5,
      "default": 50
    },
    {
      "type": "header",
      "content": "Autoplay"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Autoplay slideshow",
      "default": true
    },
    {
      "type": "range",
      "id": "duration",
      "min": 3,
      "max": 8,
      "step": 1,
      "unit": "sec",
      "label": "Change slides every",
      "default": 4
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "Mobile slider"
    },
    {
      "type": "checkbox",
      "id": "enable_slider_mobile",
      "label": "Enable slider",
      "default": true,
      "info": "Horizontal slider in mobile layout."
    },
    {
      "type": "header",
      "content": "Section spacing"
    },
    {
      "type": "select",
      "id": "width",
      "label": "Width",
      "default": "wrapper--narrow",
      "options": [
        {"value": "wrapper--full-padded", "label": "Full width padded"},
        {"value": "wrapper", "label": "Page width"},
        {"value": "wrapper--narrow", "label": "Page width narrow"}
      ]
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding top",
      "default": 60
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding bottom",
      "default": 60
    }
  ],
  "blocks": [
    {
      "name": "Press",
      "type": "press",
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "label": "Text",
          "default": "<p>Provide some information about what the company below thinks about your brand.</p>"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        },
        {
          "type": "image_picker",
          "id": "press_logo",
          "label": "Press logo"
        },
        {
          "type": "range",
          "id": "logo_width",
          "label": "Custom logo width (in pixels)",
          "min": 40,
          "max": 180,
          "default": 70,
          "step": 10,
          "unit": "px"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Press/Logo",
      "category": "Storytelling",
      "blocks": [
        {
          "type": "press"
        },
        {
          "type": "press"
        },
        {
          "type": "press"
        }
      ]
    }
  ],
  "disabled_on": {
    "groups": ["header", "aside"]
  }
}
{% endschema %}
